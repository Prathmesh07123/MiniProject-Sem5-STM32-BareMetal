
leddemo.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001bc  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001a4  080001bc  080001bc  000011bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000360  08000360  0000200c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000360  08000360  0000200c  2**0
                  CONTENTS
  4 .ARM          00000000  08000360  08000360  0000200c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000360  08000360  0000200c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000360  08000360  00001360  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000364  08000364  00001364  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000000c  20000000  08000368  00002000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .sram2        00000000  10000000  10000000  0000200c  2**0
                  CONTENTS
 10 .bss          0000001c  2000000c  2000000c  0000200c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000028  20000028  0000200c  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0000200c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000160  00000000  00000000  0000203c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000000dd  00000000  00000000  0000219c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000050  00000000  00000000  00002280  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000032  00000000  00000000  000022d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001b0f  00000000  00000000  00002302  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000653  00000000  00000000  00003e11  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000763a  00000000  00000000  00004464  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0000ba9e  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000080  00000000  00000000  0000bae4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000075  00000000  00000000  0000bb64  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001bc <__do_global_dtors_aux>:
 80001bc:	b510      	push	{r4, lr}
 80001be:	4c05      	ldr	r4, [pc, #20]	@ (80001d4 <__do_global_dtors_aux+0x18>)
 80001c0:	7823      	ldrb	r3, [r4, #0]
 80001c2:	b933      	cbnz	r3, 80001d2 <__do_global_dtors_aux+0x16>
 80001c4:	4b04      	ldr	r3, [pc, #16]	@ (80001d8 <__do_global_dtors_aux+0x1c>)
 80001c6:	b113      	cbz	r3, 80001ce <__do_global_dtors_aux+0x12>
 80001c8:	4804      	ldr	r0, [pc, #16]	@ (80001dc <__do_global_dtors_aux+0x20>)
 80001ca:	f3af 8000 	nop.w
 80001ce:	2301      	movs	r3, #1
 80001d0:	7023      	strb	r3, [r4, #0]
 80001d2:	bd10      	pop	{r4, pc}
 80001d4:	2000000c 	.word	0x2000000c
 80001d8:	00000000 	.word	0x00000000
 80001dc:	08000348 	.word	0x08000348

080001e0 <frame_dummy>:
 80001e0:	b508      	push	{r3, lr}
 80001e2:	4b03      	ldr	r3, [pc, #12]	@ (80001f0 <frame_dummy+0x10>)
 80001e4:	b11b      	cbz	r3, 80001ee <frame_dummy+0xe>
 80001e6:	4903      	ldr	r1, [pc, #12]	@ (80001f4 <frame_dummy+0x14>)
 80001e8:	4803      	ldr	r0, [pc, #12]	@ (80001f8 <frame_dummy+0x18>)
 80001ea:	f3af 8000 	nop.w
 80001ee:	bd08      	pop	{r3, pc}
 80001f0:	00000000 	.word	0x00000000
 80001f4:	20000010 	.word	0x20000010
 80001f8:	08000348 	.word	0x08000348

080001fc <delay>:
uint32_t *GPIOB_MODER = (uint32_t*)0x48000400;
uint32_t *GPIOB_ODR = (uint32_t*)0x48000414;

void delay(int ms);

void delay(int ms){
 80001fc:	b480      	push	{r7}
 80001fe:	b085      	sub	sp, #20
 8000200:	af00      	add	r7, sp, #0
 8000202:	6078      	str	r0, [r7, #4]
	for(int i = 0; i < ms; i++){
 8000204:	2300      	movs	r3, #0
 8000206:	60fb      	str	r3, [r7, #12]
 8000208:	e00d      	b.n	8000226 <delay+0x2a>
		for(int j = 0; j < 7599; j++);
 800020a:	2300      	movs	r3, #0
 800020c:	60bb      	str	r3, [r7, #8]
 800020e:	e002      	b.n	8000216 <delay+0x1a>
 8000210:	68bb      	ldr	r3, [r7, #8]
 8000212:	3301      	adds	r3, #1
 8000214:	60bb      	str	r3, [r7, #8]
 8000216:	68bb      	ldr	r3, [r7, #8]
 8000218:	f641 52ae 	movw	r2, #7598	@ 0x1dae
 800021c:	4293      	cmp	r3, r2
 800021e:	ddf7      	ble.n	8000210 <delay+0x14>
	for(int i = 0; i < ms; i++){
 8000220:	68fb      	ldr	r3, [r7, #12]
 8000222:	3301      	adds	r3, #1
 8000224:	60fb      	str	r3, [r7, #12]
 8000226:	68fa      	ldr	r2, [r7, #12]
 8000228:	687b      	ldr	r3, [r7, #4]
 800022a:	429a      	cmp	r2, r3
 800022c:	dbed      	blt.n	800020a <delay+0xe>
	}
}
 800022e:	bf00      	nop
 8000230:	bf00      	nop
 8000232:	3714      	adds	r7, #20
 8000234:	46bd      	mov	sp, r7
 8000236:	f85d 7b04 	ldr.w	r7, [sp], #4
 800023a:	4770      	bx	lr

0800023c <main>:

int main(void)
{
 800023c:	b580      	push	{r7, lr}
 800023e:	af00      	add	r7, sp, #0
	*AHB2ENR |= (1 << 1);
 8000240:	4b17      	ldr	r3, [pc, #92]	@ (80002a0 <main+0x64>)
 8000242:	681b      	ldr	r3, [r3, #0]
 8000244:	681a      	ldr	r2, [r3, #0]
 8000246:	4b16      	ldr	r3, [pc, #88]	@ (80002a0 <main+0x64>)
 8000248:	681b      	ldr	r3, [r3, #0]
 800024a:	f042 0202 	orr.w	r2, r2, #2
 800024e:	601a      	str	r2, [r3, #0]
	*GPIOB_MODER &= ~(0b11 << 14);
 8000250:	4b14      	ldr	r3, [pc, #80]	@ (80002a4 <main+0x68>)
 8000252:	681b      	ldr	r3, [r3, #0]
 8000254:	681a      	ldr	r2, [r3, #0]
 8000256:	4b13      	ldr	r3, [pc, #76]	@ (80002a4 <main+0x68>)
 8000258:	681b      	ldr	r3, [r3, #0]
 800025a:	f422 4240 	bic.w	r2, r2, #49152	@ 0xc000
 800025e:	601a      	str	r2, [r3, #0]
	*GPIOB_MODER |= (0b01 << 14);
 8000260:	4b10      	ldr	r3, [pc, #64]	@ (80002a4 <main+0x68>)
 8000262:	681b      	ldr	r3, [r3, #0]
 8000264:	681a      	ldr	r2, [r3, #0]
 8000266:	4b0f      	ldr	r3, [pc, #60]	@ (80002a4 <main+0x68>)
 8000268:	681b      	ldr	r3, [r3, #0]
 800026a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800026e:	601a      	str	r2, [r3, #0]

	while(1){
		*GPIOB_ODR |= (1 << 7);
 8000270:	4b0d      	ldr	r3, [pc, #52]	@ (80002a8 <main+0x6c>)
 8000272:	681b      	ldr	r3, [r3, #0]
 8000274:	681a      	ldr	r2, [r3, #0]
 8000276:	4b0c      	ldr	r3, [pc, #48]	@ (80002a8 <main+0x6c>)
 8000278:	681b      	ldr	r3, [r3, #0]
 800027a:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800027e:	601a      	str	r2, [r3, #0]
		delay(100);
 8000280:	2064      	movs	r0, #100	@ 0x64
 8000282:	f7ff ffbb 	bl	80001fc <delay>
		*GPIOB_ODR &= ~(1 << 7);
 8000286:	4b08      	ldr	r3, [pc, #32]	@ (80002a8 <main+0x6c>)
 8000288:	681b      	ldr	r3, [r3, #0]
 800028a:	681a      	ldr	r2, [r3, #0]
 800028c:	4b06      	ldr	r3, [pc, #24]	@ (80002a8 <main+0x6c>)
 800028e:	681b      	ldr	r3, [r3, #0]
 8000290:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8000294:	601a      	str	r2, [r3, #0]
		delay(100);
 8000296:	2064      	movs	r0, #100	@ 0x64
 8000298:	f7ff ffb0 	bl	80001fc <delay>
		*GPIOB_ODR |= (1 << 7);
 800029c:	bf00      	nop
 800029e:	e7e7      	b.n	8000270 <main+0x34>
 80002a0:	20000000 	.word	0x20000000
 80002a4:	20000004 	.word	0x20000004
 80002a8:	20000008 	.word	0x20000008

080002ac <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002ac:	480d      	ldr	r0, [pc, #52]	@ (80002e4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002ae:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002b0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002b4:	480c      	ldr	r0, [pc, #48]	@ (80002e8 <LoopForever+0x6>)
  ldr r1, =_edata
 80002b6:	490d      	ldr	r1, [pc, #52]	@ (80002ec <LoopForever+0xa>)
  ldr r2, =_sidata
 80002b8:	4a0d      	ldr	r2, [pc, #52]	@ (80002f0 <LoopForever+0xe>)
  movs r3, #0
 80002ba:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002bc:	e002      	b.n	80002c4 <LoopCopyDataInit>

080002be <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002be:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002c0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002c2:	3304      	adds	r3, #4

080002c4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002c4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002c6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002c8:	d3f9      	bcc.n	80002be <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002ca:	4a0a      	ldr	r2, [pc, #40]	@ (80002f4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002cc:	4c0a      	ldr	r4, [pc, #40]	@ (80002f8 <LoopForever+0x16>)
  movs r3, #0
 80002ce:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002d0:	e001      	b.n	80002d6 <LoopFillZerobss>

080002d2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002d2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002d4:	3204      	adds	r2, #4

080002d6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002d6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002d8:	d3fb      	bcc.n	80002d2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002da:	f000 f811 	bl	8000300 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002de:	f7ff ffad 	bl	800023c <main>

080002e2 <LoopForever>:

LoopForever:
  b LoopForever
 80002e2:	e7fe      	b.n	80002e2 <LoopForever>
  ldr   r0, =_estack
 80002e4:	20050000 	.word	0x20050000
  ldr r0, =_sdata
 80002e8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002ec:	2000000c 	.word	0x2000000c
  ldr r2, =_sidata
 80002f0:	08000368 	.word	0x08000368
  ldr r2, =_sbss
 80002f4:	2000000c 	.word	0x2000000c
  ldr r4, =_ebss
 80002f8:	20000028 	.word	0x20000028

080002fc <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002fc:	e7fe      	b.n	80002fc <ADC1_2_IRQHandler>
	...

08000300 <__libc_init_array>:
 8000300:	b570      	push	{r4, r5, r6, lr}
 8000302:	4d0d      	ldr	r5, [pc, #52]	@ (8000338 <__libc_init_array+0x38>)
 8000304:	4c0d      	ldr	r4, [pc, #52]	@ (800033c <__libc_init_array+0x3c>)
 8000306:	1b64      	subs	r4, r4, r5
 8000308:	10a4      	asrs	r4, r4, #2
 800030a:	2600      	movs	r6, #0
 800030c:	42a6      	cmp	r6, r4
 800030e:	d109      	bne.n	8000324 <__libc_init_array+0x24>
 8000310:	4d0b      	ldr	r5, [pc, #44]	@ (8000340 <__libc_init_array+0x40>)
 8000312:	4c0c      	ldr	r4, [pc, #48]	@ (8000344 <__libc_init_array+0x44>)
 8000314:	f000 f818 	bl	8000348 <_init>
 8000318:	1b64      	subs	r4, r4, r5
 800031a:	10a4      	asrs	r4, r4, #2
 800031c:	2600      	movs	r6, #0
 800031e:	42a6      	cmp	r6, r4
 8000320:	d105      	bne.n	800032e <__libc_init_array+0x2e>
 8000322:	bd70      	pop	{r4, r5, r6, pc}
 8000324:	f855 3b04 	ldr.w	r3, [r5], #4
 8000328:	4798      	blx	r3
 800032a:	3601      	adds	r6, #1
 800032c:	e7ee      	b.n	800030c <__libc_init_array+0xc>
 800032e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000332:	4798      	blx	r3
 8000334:	3601      	adds	r6, #1
 8000336:	e7f2      	b.n	800031e <__libc_init_array+0x1e>
 8000338:	08000360 	.word	0x08000360
 800033c:	08000360 	.word	0x08000360
 8000340:	08000360 	.word	0x08000360
 8000344:	08000364 	.word	0x08000364

08000348 <_init>:
 8000348:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800034a:	bf00      	nop
 800034c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800034e:	bc08      	pop	{r3}
 8000350:	469e      	mov	lr, r3
 8000352:	4770      	bx	lr

08000354 <_fini>:
 8000354:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000356:	bf00      	nop
 8000358:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800035a:	bc08      	pop	{r3}
 800035c:	469e      	mov	lr, r3
 800035e:	4770      	bx	lr
